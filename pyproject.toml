[tool.poetry]
name = "ubiquity-performance-test"
version = "2.0.0"
description = "Performance Tests for the Ubiquity API"
authors = ["Bink <bink@bink.bink>"]
readme = "README.md"
packages = [{include = "ubiquity_performance_test"}]

[[tool.poetry.source]]
name = "bink-pypi"
url = "https://pypi.gb.bink.com/simple"
priority = "explicit"

[tool.poetry.dependencies]
python = "^3.11"
locust = "^2.15.1"
geventhttpclient-wheels = "^1.3.1.dev3"
faker = "^18.11.2"
pyjwt = "^2.7.0"
requests = "^2.31.0"
psycopg2-binary = "^2.9.6"
sqlalchemy = "<2.0.0"
urllib3 = "^2.0.3"
arrow = "^1.2.3"
azure-keyvault-secrets = "^4.7.0"
azure-identity = "^1.13.0"
redis = "^4.6.0"
itsdangerous = "^2.1.2"
jinja2 = "^3.1.2"
markupsafe = "^2.1.3"
werkzeug = "^2.3.6"
pycryptodome = "^3.18.0"
python-decouple = "^3.8"
loguru = "^0.7.0"
typer = "^0.9.0"
shared-config-storage = {version = "^1.6.1", source = "bink-pypi"}
bink-logging-utils = {version = "^1.0.0", source = "bink-pypi"}

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
mypy = "^1.4.1"
pytest = "^7.4.0"
ptpython = "^3.0.23"
xenon = "^0.9.0"
isort = "^5.12.0"
ruff = "^0.0.276"
refurb = "^1.17.0"
types-redis = "^4.6.0.2"
types-requests = "^2.31.0.1"
ipython = "^8.14.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
data-population = "ubiquity_performance_test.cli.commands:app"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[tool.ruff]
line-length = 120
show-source = true
target-version = "py311"
select = [
    "F",    # Pyflakes (F)
    "E",
    "W",    # pycodestyle (E, W)
    "C90",  # mccabe (C90)
    # isort (I)
    # pydocstyle (D)
    "UP",   # pyupgrade (UP)
    "N",    # pep8-naming (N)
    "YTT",  # flake8-2020 (YTT)
    "ANN",  # flake8-annotations (ANN)
    # "S",    # flake8-bandit (S)
    "BLE",  # flake8-blind-except (BLE)
    # flake8-boolean-trap (FBT)
    "B",    # flake8-bugbear (B)
    "A",    # flake8-builtins (A)
    "C4",   # flake8-comprehensions (C4)
    "T10",  # flake8-debugger (T10)
    # flake8-errmsg (EM)
    "ICN",  # flake8-import-conventions (ICN)
    "T20",  # flake8-print (T20)
    # "PT",   # flake8-pytest-style (PT)
    "Q",    # flake8-quotes (Q)
    # flake8-return (RET)
    "SIM",  # flake8-simplify (SIM)
    "TID",  # flake8-tidy-imports (TID)
    "ARG",  # flake8-unused-arguments (ARG)
    "DTZ",  # flake8-datetimez (DTZ)
    "ERA",  # eradicate (ERA) until we can remove commented out code this has to stay deactivated
    # pandas-vet (PD)
    # pygrep-hooks (PGH)
    "PLC",
    "PLE",
    "PLR",
    "PLW",  # Pylint (PLC, PLE, PLR, PLW)
    "RUF",  # Ruff-specific rules (RUF)
]

ignore = [
    "BLE001",
    "PLR2004",
    "N818",
    "ANN101", # Missing type annotation for `self`
    "ANN102", # Missing type annotation for `cls`
]

[tool.ruff.per-file-ignores]
"ubiquity_performance_test/cli/commands.py" = ["B008"]

[tool.mypy]
disallow_untyped_defs = true
show_error_codes = true
warn_unused_ignores = true
ignore_missing_imports = true
disallow_incomplete_defs = true
warn_redundant_casts = true
